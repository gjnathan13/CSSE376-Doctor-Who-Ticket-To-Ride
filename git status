[1mdiff --cc Doctor Who Ticket To Ride/src/doctorWhoGame/Hand.java[m
[1mindex 4aa93af,9d5171c..0000000[m
[1m--- a/Doctor Who Ticket To Ride/src/doctorWhoGame/Hand.java[m
[1m+++ b/Doctor Who Ticket To Ride/src/doctorWhoGame/Hand.java[m
[36m@@@ -1,9 -1,176 +1,183 @@@[m
  package doctorWhoGame;[m
  [m
[32m++<<<<<<< HEAD[m
[32m +public class Hand {[m
[32m +	[m
[32m +	public int[] getNumberOfEachColor(){[m
[32m +		return null;[m
[32m++=======[m
[32m+ import java.util.ArrayList;[m
[32m+ [m
[32m+ /**[m
[32m+  * The hand object which contains many sets of cards. Each set is a different[m
[32m+  * color or it is the route cards the player has, or it is the action cards the[m
[32m+  * player has. The train card sets in the hand go in the order: 0-Red 1-Pink 2-[m
[32m+  * Orange 3- Yellow 4-Green 5-Blue 6-White 7-Black 8-Rainbow[m
[32m+  * [m
[32m+  * @author wrightsd[m
[32m+  *[m
[32m+  */[m
[32m+ public class Hand {[m
[32m+ [m
[32m+ 	private ArrayList<ArrayList<String>> trainCards;[m
[32m+ [m
[32m+ 	/**[m
[32m+ 	 * The constructor for the hand object that initializes all the different[m
[32m+ 	 * sets of cards.[m
[32m+ 	 */[m
[32m+ [m
[32m+ 	public Hand() {[m
[32m+ 		this.trainCards = new ArrayList<ArrayList<String>>();[m
[32m+ 		for (int i = 0; i < 9; i++) {[m
[32m+ 			this.trainCards.add(new ArrayList<String>());[m
[32m+ 		}[m
[32m+ 	}[m
[32m+ [m
[32m+ 	/**[m
[32m+ 	 * Adds the given train card color string to the correct sub-ArrayList of[m
[32m+ 	 * the train colors ArrayList. Timothy Anderson gave me the idea to use a[m
[32m+ 	 * switching function.[m
[32m+ 	 * [m
[32m+ 	 * @param trainCard[m
[32m+ 	 *            String that is the color of the train card with the first[m
[32m+ 	 *            letter capitalized. The options are Red, Pink, Orange, Yellow,[m
[32m+ 	 *            Green, Blue, White, Black, and Rainbow.[m
[32m+ 	 */[m
[32m+ 	public void addTrainCard(String trainCard) {[m
[32m+ 		switch (trainCard) {[m
[32m+ 		case "Red": {[m
[32m+ 			this.trainCards.get(0).add(trainCard);[m
[32m+ 			break;[m
[32m+ 		}[m
[32m+ 		case "Pink": {[m
[32m+ 			this.trainCards.get(1).add(trainCard);[m
[32m+ 			break;[m
[32m+ 		}[m
[32m+ 		case "Orange": {[m
[32m+ 			this.trainCards.get(2).add(trainCard);[m
[32m+ 			break;[m
[32m+ 		}[m
[32m+ 		case "Yellow": {[m
[32m+ 			this.trainCards.get(3).add(trainCard);[m
[32m+ 			break;[m
[32m+ 		}[m
[32m+ 		case "Green": {[m
[32m+ 			this.trainCards.get(4).add(trainCard);[m
[32m+ 			break;[m
[32m+ 		}[m
[32m+ 		case "Blue": {[m
[32m+ 			this.trainCards.get(5).add(trainCard);[m
[32m+ 			break;[m
[32m+ 		}[m
[32m+ 		case "White": {[m
[32m+ 			this.trainCards.get(6).add(trainCard);[m
[32m+ 			break;[m
[32m+ 		}[m
[32m+ 		case "Black": {[m
[32m+ 			this.trainCards.get(7).add(trainCard);[m
[32m+ 			break;[m
[32m+ 		}[m
[32m+ 		case "Rainbow": {[m
[32m+ 			this.trainCards.get(8).add(trainCard);[m
[32m+ 			break;[m
[32m+ 		}[m
[32m+ 		}[m
[32m+ [m
[32m+ 	}[m
[32m+ [m
[32m+ 	/**[m
[32m+ 	 * Remove the given string from the list of train cards, or returns null if[m
[32m+ 	 * it is not able to do so.[m
[32m+ 	 * [m
[32m+ 	 * @param trainCard[m
[32m+ 	 *            String giving the color of the card to be removed. The options[m
[32m+ 	 *            are Red, Pink, Orange, Yellow, Green, Blue, White, Black, and[m
[32m+ 	 *            Rainbow.[m
[32m+ 	 */[m
[32m+ 	public void removeTrainCard(String trainCard) {[m
[32m+ 		switch (trainCard) {[m
[32m+ 		case "Red": {[m
[32m+ 			ArrayList<String> list = this.trainCards.get(0);[m
[32m+ 			int size = list.size();[m
[32m+ 			if (size != 0) {[m
[32m+ 				list.remove(size - 1);[m
[32m+ 			}[m
[32m+ 			break;[m
[32m+ 		}[m
[32m+ 		case "Pink": {[m
[32m+ 			ArrayList<String> list = this.trainCards.get(1);[m
[32m+ 			int size = list.size();[m
[32m+ 			if (size != 0) {[m
[32m+ 				list.remove(size - 1);[m
[32m+ 			}[m
[32m+ 			break;[m
[32m+ 		}[m
[32m+ 		case "Orange": {[m
[32m+ 			ArrayList<String> list = this.trainCards.get(2);[m
[32m+ 			int size = list.size();[m
[32m+ 			if (size != 0) {[m
[32m+ 				list.remove(size - 1);[m
[32m+ 			}[m
[32m+ 			break;[m
[32m+ 		}[m
[32m+ 		case "Yellow": {[m
[32m+ 			ArrayList<String> list = this.trainCards.get(3);[m
[32m+ 			int size = list.size();[m
[32m+ 			if (size != 0) {[m
[32m+ 				list.remove(size - 1);[m
[32m+ 			}[m
[32m+ 			break;[m
[32m+ 		}[m
[32m+ 		case "Green": {[m
[32m+ 			ArrayList<String> list = this.trainCards.get(4);[m
[32m+ 			int size = list.size();[m
[32m+ 			if (size != 0) {[m
[32m+ 				list.remove(size - 1);[m
[32m+ 			}[m
[32m+ 			break;[m
[32m+ 		}[m
[32m+ 		case "Blue": {[m
[32m+ 			ArrayList<String> list = this.trainCards.get(5);[m
[32m+ 			int size = list.size();[m
[32m+ 			if (size != 0) {[m
[32m+ 				list.remove(size - 1);[m
[32m+ 			}[m
[32m+ 			break;[m
[32m+ 		}[m
[32m+ 		case "White": {[m
[32m+ 			ArrayList<String> list = this.trainCards.get(6);[m
[32m+ 			int size = list.size();[m
[32m+ 			if (size != 0) {[m
[32m+ 				list.remove(size - 1);[m
[32m+ 			}[m
[32m+ 			break;[m
[32m+ 		}[m
[32m+ 		case "Black": {[m
[32m+ 			ArrayList<String> list = this.trainCards.get(7);[m
[32m+ 			int size = list.size();[m
[32m+ 			if (size != 0) {[m
[32m+ 				list.remove(size - 1);[m
[32m+ 			}[m
[32m+ 			break;[m
[32m+ 		}[m
[32m+ 		case "Rainbow": {[m
[32m+ 			ArrayList<String> list = this.trainCards.get(8);[m
[32m+ 			int size = list.size();[m
[32m+ 			if (size != 0) {[m
[32m+ 				list.remove(size - 1);[m
[32m+ 			}[m
[32m+ 			break;[m
[32m+ 		}[m
[32m+ 		}[m
[32m+ 	}[m
[32m+ [m
[32m+ 	public ArrayList<Integer> getNumberOfTrainCards() {[m
[32m+ 		ArrayList<Integer> numberOfCards=new ArrayList<Integer>();[m
[32m+ 		for(int i=0;i<9;i++){[m
[32m+ 			numberOfCards.add(this.trainCards.get(i).size());[m
[32m+ 		}[m
[32m+ 		return numberOfCards;[m
[32m++>>>>>>> origin/Spencer-Hand[m
  	}[m
  [m
  }[m
